/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package todo;

import org.junit.Test;
import static org.junit.Assert.*;


public class AppTest {

    //add list entry
    @Test 
    public void testAddEntry()
    {
        //App classUnderTest = new App();
        ToDoList myList = new ToDoList();

        String entry = "buy groceries!";

        myList.add(new ToDoEntry(entry));
        assertEquals(entry, myList.getLastEntry().toString());
    }

    @Test
    public void testRemoveEntry()
    {
        // given
        ToDoList myList = new ToDoList();

        String entry = "buy food for Loki";
        myList.add(new ToDoEntry(entry)); // add item to the list

        int entryIndex = myList.getIndexOfEntry(myList.getLastEntry());
        ToDoEntry entryToDelete = myList.getEntryByIndex(entryIndex); // value of that index

        // when
        myList.remove(entryToDelete); // deletes that value

        // then
        assertFalse(myList.searchForEntry(entryToDelete)); // false indicates that value is no longer contained in list
    }

    @Test
    public void testRemoveEntryByIndex()
    {
        //given
        ToDoList myList = new ToDoList();

        String entry = "find a friend for Pickles";
        myList.add(new ToDoEntry(entry));

        int entryIndex = myList.getIndexOfEntry(myList.getLastEntry());
        ToDoEntry entryToDelete = myList.getEntryByIndex((entryIndex));

        //when
        myList.remove(entryIndex);

        //then
        assertFalse(myList.searchForEntry(entryToDelete));
    }

    @Test
    public void testUpdateEntry()
    {
        //given
        ToDoList myList = new ToDoList();

        String entry = "buy food for Loki";
        myList.add(new ToDoEntry(entry)); // add item to the list

        //when
        String newEntry = "buy food for Pickles";
        ToDoEntry replacedEntry = myList.update(0, new ToDoEntry(newEntry)); //returns oldEntry that's getting replaced

        //then
        assertEquals(entry, replacedEntry.toString()); //ensure that entry and replacedEntry are the same (should be the entry that gets changed)
        assertNotEquals(myList.getEntryByIndex(0), newEntry);

        myList.displayAllEntries(); //confirm newEntry replaced entry
    }

    @Test
    public void testCheckOffEntry()
    {
        //given
        ToDoList myList = new ToDoList();
        String entry = "Get Pickles spayed";
        Object oldEntry = myList.add(new ToDoEntry(entry));

        int indexOfEntry = myList.getIndexOfEntry(myList.getLastEntry());
        ToDoEntry entryByIndex = myList.getEntryByIndex(indexOfEntry);

        String newEntry = "[âˆš] " + entry;

        //when
        myList.update(myList.getIndexOfEntry(entryByIndex), new ToDoEntry(newEntry));

        //then
        assertEquals(newEntry, myList.getLastEntry().toString());
    }

    @Test
    public void testDisplayAllEntries()
    {
        int counter = 0;

        ToDoList myList = new ToDoList();

        String entry1 = "Buy scratching post for Pickles"; //entry one
        myList.add(new ToDoEntry(entry1));

        String entry2 = "Buy bone for Loki"; // entry two
        myList.add(new ToDoEntry(entry2));

        Object[] entries = myList.listToArray(); // turn list to array to count entries. could also try Arraylist.listIterator() along with hasNext() https://bit.ly/2QtdFRk
        for (Object entry : entries)
        {
            counter += 1;
        }


        int sizeOfList = myList.sizeOfList();

        assertEquals(sizeOfList, counter);

    }

//    @Test
//    public void testDisplayCheckedEntries()
//    {
//
//    }

}
